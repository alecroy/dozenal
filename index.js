// Generated by CoffeeScript 1.9.3
(function() {
  var digitTable, powers, words;

  exports.print = function(number, format) {
    var digits, fFixed, fWidth, fractional, fractions, iFixed, iWidth, integral, lsb, msb, ref, ref1, sign, table, upperLower;
    if (format == null) {
      format = '';
    }
    digits = [];
    fractions = [];
    sign = -1 === Math.sign(number) ? '-' : '';
    number = Math.abs(number);
    integral = Math.floor(number);
    fractional = number - integral;
    ref = /(\d?)([dD]?).?(\d?)/.exec(format), format = ref[0], iWidth = ref[1], upperLower = ref[2], fWidth = ref[3];
    ref1 = [false, false], iFixed = ref1[0], fFixed = ref1[1];
    if (iWidth !== '') {
      iWidth = Number(iWidth);
      iFixed = true;
    }
    if (fWidth !== '') {
      fWidth = Number(fWidth);
      fFixed = true;
    }
    table = digitTable[upperLower || 'D'];
    if (integral === 0) {
      digits.unshift('0');
    }
    while (integral >= 1 && (!iFixed || iWidth > 0)) {
      iWidth--;
      lsb = integral % 12;
      digits.unshift(table[lsb]);
      integral -= lsb;
      integral /= 12;
    }
    while (iFixed && iWidth > 0) {
      digits.unshift(' ');
      iWidth--;
    }
    while (fractional > 0 && (!fFixed || fWidth > 0)) {
      fWidth--;
      fractional *= 12;
      msb = Math.floor(fractional);
      fractions.push(table[msb]);
      fractional -= msb;
    }
    while (fFixed && fWidth > 0) {
      fractions.push(' ');
      fWidth--;
    }
    if (fractions.length === 0) {
      return "" + sign + (digits.join(''));
    } else {
      return "" + sign + (digits.join('')) + "." + (fractions.join(''));
    }
  };

  digitTable = {
    'D': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'E'],
    'd': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 't', 'e']
  };

  words = {
    '1': 'one',
    '2': 'two',
    '3': 'three',
    '4': 'four',
    '5': 'five',
    '6': 'six',
    '7': 'seven',
    '8': 'eight',
    '9': 'nine',
    'T': 'dec',
    't': 'dec',
    'E': 'el',
    'e': 'el'
  };

  powers = {
    1: 'doh',
    2: 'gro',
    3: 'mo',
    6: 'millo',
    9: 'bo',
    12: 'tro',
    15: 'quadro',
    18: 'quinto',
    21: 'sexto',
    24: 'septo',
    27: 'octo'
  };

  exports.say = function(number, format) {
    var dozenal, fractional, int, power, ref, ref1, segments, triple;
    if (format == null) {
      format = '';
    }
    dozenal = exports.print(number, format);
    ref = dozenal.split('.'), int = ref[0], fractional = ref[1];
    segments = [];
    if (fractional && fractional !== '') {
      fractional = fractional.split('').reverse().join('');
      while (fractional.length > 0) {
        segments.unshift(words[fractional.substr(0, 1)]);
        fractional = fractional.substr(1);
      }
      segments.unshift('point');
    }
    if (int === '0' || int === '') {
      segments.unshift('zero');
    } else {
      int = int.split('').reverse().join('');
      power = 0;
      while (int.length > 0) {
        ref1 = [int.substr(0, 3), int.substr(3)], triple = ref1[0], int = ref1[1];
        if (power > 0) {
          segments.unshift(powers[power]);
        }
        switch (triple.length) {
          case 1:
            segments.unshift("" + words[triple[0]]);
            break;
          case 2:
            segments.unshift(words[triple[1]] + "-doh " + words[triple[0]]);
            break;
          case 3:
            segments.unshift(words[triple[2]] + "-gro " + words[triple[1]] + "-doh " + words[triple[0]]);
        }
        power += 3;
      }
    }
    return segments.join(' ');
  };

}).call(this);
